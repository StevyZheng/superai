<template>
  <div class="app-container">
    <div class="toolbar" style="float:left;padding-top:10px;padding-left:15px;">
      <table align="center" width="300px">
        <tr>
          <th><el-checkbox v-model="checkAll" :indeterminate="isIndeterminate" @change="handleCheckAllChange">全选</el-checkbox></th>
          <th><el-button icon="el-icon-circle-plus-outline" type="primary" size="small" @click="handleAdd">新建用户</el-button></th>
          <th><el-button icon="el-icon-delete" type="primary" size="small" @click="handleDelete">批量删除</el-button></th>
        </tr>
      </table>
    </div>
    <el-table
      v-loading="listLoading"
      :data="tableData.slice((currentPage-1)*pageSize,currentPage*pageSize)"
      element-loading-text="Loading"
      border
      fit
      highlight-current-row
    >
      <el-table-column align="center" label="选择" width="55">
        <template slot-scope="scope">
          <el-checkbox v-model="scope.row.checked" @change="handleCheckItemChange" />
        </template>
      </el-table-column>
      <el-table-column align="center"  label="ID" width="95">
        <template slot-scope="scope">
          <span>{{ scope.row.id }}</span>
        </template>
      </el-table-column>
      <el-table-column align="center" label="用户名">
        <template slot-scope="scope">
          <span>{{ scope.row.username }}</span>
        </template>
      </el-table-column>
      <el-table-column label="所属租户" align="center">
        <template slot-scope="scope">
          <span>{{ scope.row.rent }}</span>
        </template>
      </el-table-column>
      <el-table-column align="center" prop="created_at" label="修改时间" width="200">
        <template slot-scope="scope">
          <i class="el-icon-time" />
          <span>{{ scope.row.edittime }}</span>
        </template>
      </el-table-column>
      <el-table-column class-name="status-col" label="操作" width="150" align="center">
        <!-- <template slot-scope="scope"> -->
        <!--  <el-tag :type="scope.row.status | statusFilter">{{ scope.row.status }}</el-tag> -->
        <!-- </template> -->
        <template slot-scope="scope">
          <el-button type="primary" plain icon="el-icon-edit" size="small" @click="handleEdit(scope.$index,scope.row)">修改</el-button>
          <el-button type="primary" plain icon="el-icon-delete" size="small" @click="handleDelete(scope.row)">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      :total="tableData.length"
      layout="total, prev, pager, next, jumper"
      background
      :current-page="currentPage"
      :page-size="pageSize"
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
    />

    <el-dialog
      :title="dialogTitle"
      width="40%"
      :visible.sync="dialogVisible"
      :close-on-click-modal="false"
      @close="handleClose"
    >
      <el-form
        ref="dataForm"
        :model="dataForm"
        label-width="80px"
        size="small"
        label-position="right"
        :rules="Formtest"
      >
        <el-form-item label="ID" prop="id">
          <el-input v-model="dataForm.id" :disabled="false" auto-complete="off" />
        </el-form-item>
        <el-form-item label="用户名" prop="name">
          <el-input v-model="dataForm.username" auto-complete="off" />
        </el-form-item>
        <el-form-item label="密码" prop="password">
          <el-input v-model="dataForm.password" type="password" auto-complete="off" />
        </el-form-item>
        <el-form-item label="所属租户" prop="rent">
          <el-input v-model="dataForm.rent" auto-complete="off" />
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button :size="small" @click.native="dialogVisible = false">取消</el-button>
        <el-button :size="small" type="primary" :loading="editLoading" @click.native="submitForm">提交</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import { getList } from '@/api/table'

export default {
  data() {
    return {
      tableData: [],
      checkAll: false,
      listLoading: true,
      dialogTitle: '新建',
      dialogVisible: false, 
      editLoading: false,
      dataForm: {
        id: '',
        username: '',
        password: '',
        rent: ''
      },
      currentPage: 1,
      pageSize: 5
    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    fetchData() {
      this.listLoading = true
      getList().then(response => {
        this.tableData = response.data.items
        this.listLoading = false
      })
    },
    handleCheckAllChange(rows) {
    // this.tableData.map((item, i) => {
    // 	item.checked = rows
    // })
      var data = []
      for (var i = 0; i < rows.length; i++) {
        data.push(rows[i].id)
      }
      this.chooseRows = data;
    },
    handleCheckItemChange(val) {
      for (let i = 0, l = this.tableData.length; i < l; i++){
        if (this.tableData[i].checked !== val){
          this.checkAll = false
          return
        }
      }
      this.checkAll = val
    },
    handleClose() {
      this.editLoading = false
    },
    handleAdd() {
      this.dialogTitle = '新建'
      this.dataForm = {
		id: 0,
		username:"",
		password:"",
		rent:""
      }
	this.dialogVisible = true
    },
	handleDelete: function(index, row) {
		this.dataForm.splice(index, 1)
	},
    handleEdit(val) {
      this.dialogTitle = '修改'
      this.dataForm.id = val.index
      this.dataForm.username = val.username
      this.dataForm.password = val.password
      this.dataForm.rent = val.rent
      this.dialogVisible = true
    },
    submitForm() {
      this.$refs.dataForm.validate((valid) => {
        if (valid) {
          this.$confirm('确认提交吗？', '提示', {}).then(() => {
            this.editLoading = true
          })
        }
      })
    },
    handleSizeChange(val) {
      this.pageSize = val
    },
    handleCurrentChange(val) {
      this.currentPage = val
    }
  }
}
</script>
